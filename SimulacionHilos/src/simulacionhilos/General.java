/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulacionhilos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author carlo
 */
public class General extends javax.swing.JFrame {
    
     int contadorprocesos=0;
     int cuantum=0;

    /**
     * Creates new form General
     */
    public General() {
        initComponents();
        new Thread(new Hilo()).start();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtcuantum = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jlbHora = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtcuantum.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jPanel1.add(txtcuantum, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 140, 70));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cuantum");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        btnIniciar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnIniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Iniciar.png"))); // NOI18N
        btnIniciar.setBorder(null);
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        jPanel1.add(btnIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Establecer Cuantum");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 380));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbHora.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jlbHora.setText("---");
        jPanel2.add(jlbHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Hora");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, 610, 380));

        jPanel3.setBackground(new java.awt.Color(10, 33, 51));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso", "Hora Inicio", "Tempo total de Ejecucion", "Tiempo Restante", "Hora Finalizado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 990, 150));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Agregar.png"))); // NOI18N
        btnAgregar.setBorder(null);
        btnAgregar.setContentAreaFilled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel3.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 1230, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
       
       
            
            ingresar();
      
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        // TODO add your handling code here:

         if(!txtcuantum.getText().equals("")){
             
            cuantum = Integer.valueOf(txtcuantum.getText());
            new Thread(new Hilo_de_Procesos()).start();
            
        }else{
             JOptionPane.showMessageDialog(null,"Debe de ingresar el cuantum");
        }
        
        
    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(General.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new General().setVisible(true);
            }
        });
    }
    
    public class Hilo implements Runnable{
        
        @Override
        public void run(){
            
            new Timer(0,new ActionListener(){
                
                @Override
                public void actionPerformed(ActionEvent e){
                    
                     Date d = new Date();
                    SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
                    jlbHora.setText(s.format(d));
                    
                    
                }
                
            }).start();
            
        }
        
    }
   

    public void ingresar(){
    
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        contadorprocesos++;
        String titulo = "Proceso "+contadorprocesos;
        int duracionP=duracion_Proceso();
        Object[] tablaProceso = new Object[5];
        tablaProceso[0] = titulo;
        tablaProceso[1] = jlbHora.getText();
        tablaProceso[2] =  duracionP;
        tablaProceso[3] =  duracionP;
        tablaProceso[4] = "";
        modelo.addRow(tablaProceso);
        jTable1.setModel(modelo);
        
    }
    
    public int duracion_Proceso(){
        
        return (int) (Math.random() * 500) + 1;
        
    }
    
    
    public class Hilo_de_Procesos implements Runnable{
        
        @Override
        public void run(){
           
            boolean Bandera = true;
            int contadorIteraciones=0;
            int proceso,tiempoTotalEjecucion=0;
            int tiempoRestanteE=0;
            
            while(Bandera!=false){
                
                while(contadorIteraciones<contadorprocesos){
                    
                    tiempoTotalEjecucion = tiempoEjecucion(contadorIteraciones);
                    tiempoRestanteE = tiempoRestante(contadorIteraciones);
                    
                    if(tiempoRestanteE!=0 && tiempoRestanteE>cuantum){
                        
                        for (int TiempoE = 1; TiempoE <=cuantum; TiempoE++) {
                            
                            tiempoRestanteE=tiempoRestanteE-1;
                            jTable1.setValueAt(String.valueOf(tiempoRestanteE),contadorIteraciones,3);
                            espera();
                        }
                        
                        verificarTiempoR(tiempoRestanteE,contadorIteraciones);
                        
                    }else if(tiempoRestanteE!=0 && tiempoRestanteE<cuantum){
                        
                        while(tiempoRestanteE>0){
                            
                            tiempoRestanteE=tiempoRestanteE-1;
                            jTable1.setValueAt(String.valueOf(tiempoRestanteE),contadorIteraciones,3);
                            espera();
                        }
                        
                        verificarTiempoR(tiempoRestanteE,contadorIteraciones);
                        
                        
                    }else if (tiempoRestanteE==0){
                        
                        Bandera=false;
                        
                    }
                    
                    contadorIteraciones++;
                }
                contadorIteraciones=0;
                
            }
            
            
        }
        
    }
    
    public String numeroProceso(int numeroProceso){
        
        return String.valueOf(jTable1.getValueAt(numeroProceso,0));
        
    }
    
    public int tiempoEjecucion(int numeroProceso){
        
        return Integer.valueOf(jTable1.getValueAt(numeroProceso,2).toString()); 
        
    }
    
    public  int tiempoRestante(int numeroProceso){
        
        return Integer.valueOf(jTable1.getValueAt(numeroProceso,3).toString());
        
    }
    
    public void espera(){
        
        try{
        Thread.sleep(1000); //Dormir sistema
    }catch(InterruptedException ex){
        Logger.getLogger(General.class.getName()).log(Level.SEVERE,null,ex);
    }
        
    }
    
    public void verificarTiempoR(int tiempoRestante,int numeroProceso){
        
        if(tiempoRestante==0){
                            
           //DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel(); 
           //modelo.removeRow(numeroProceso); 
           jTable1.setValueAt(jlbHora.getText(), numeroProceso, 4);
                            
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlbHora;
    private javax.swing.JTextField txtcuantum;
    // End of variables declaration//GEN-END:variables
}
